
const http = require('http')

const app = http.createServer((request, response) => {
  response.writeHead(200, { 'Content-Type': 'text/plain' })
  response.end('Hello World')
})

const PORT = 3001
app.listen(PORT)
console.log(`Server running on port ${PORT}`)

import http from 'http'
const http = require('http')
const app=http.createServer((req,res)=>{
res.writeHead(200,{'content-type': 'text/plain'})
res.end('hw')}
const PORT = 3001
app.listen(PORT)
console.log(`srv running on port ${PORT}`);
const http=require('http')
let notes=[
{
id: 1,
content: "html",
important: true},
{id:2,
content:"js only in browser",
important:false},
{id:3,
content:"get &post are most important of http protocol",
important:true}]
const app=http.createServer((request,response)=>{response.writeHead(200,{'content-type':'application/json'})
response.end(JSON.stringify(notes))})
const PORT=3001
app.listen(PORT)
console.log(`srv running on port ${PORT}`)
npm install express
"dependencies":{
"express" "^4.8.12"
}
}
npm update
npm install
const express = require('express')
const app = express()
let notes = [
  ...
]
app.get('/', (req, res) => {
res.send('<h1>Hello World!</h1>')
})
app.listen(PORT, () => {
  console.log(`Server running on port ${PORT}`)
})

const express = require('express')
const app = express()

app.get('/', (request, response) => {
  response.send('<h1>Hello World!</h1>')
})
app.get('/api/notes', (req, res) => {
res.json(notes)
})
res.end(JSON.stringify(notes))
npm install --save-dev nodemon
{
  //...
  "dependencies": {
    "express": "^4.18.2"
  },
"devDependencies":{
"nodemon":"^2.0.20"
}
}

how to start application with nodemon: node_modules/.bin/nodemon index.js


{
//..
"scripts":{
"start":"node index.js",
"dev": "nodemon index.js",
"test":"echo \"Error: no test specified\" && exit 1"
},
// ..
}
npm run dev. unlike with the start and test scripts we also have to add run to the command because it is a non-native
script





























